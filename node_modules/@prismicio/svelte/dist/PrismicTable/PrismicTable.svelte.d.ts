import { SvelteComponent } from "svelte";
import { type TableField } from "@prismicio/client";
import { type ComponentType } from "svelte";
import type { TableComponents } from "../types";
declare const __propDef: {
    props: {
        /**
             * The Prismic table field to render.
             */ field: TableField;
        /**
             * An object that maps a rich text block type to a Svelte component.
             */ components?: (TableComponents & Partial<Record<"heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "paragraph" | "preformatted" | "strong" | "em" | "listItem" | "oListItem" | "list" | "oList" | "image" | "embed" | "hyperlink" | "label" | "span", new (...args: any[]) => SvelteComponent<Partial<{
            /**
             * An object that maps a rich text block type to a Svelte component.
             */
            node: import("@prismicio/client").RTAnyNode;
        }>, any, any>>>) | undefined;
        /**
             * The component rendered when the field is empty. If a fallback is not given,
             * `null` will be rendered.
             */ fallback?: ComponentType | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type PrismicTableProps = typeof __propDef.props;
export type PrismicTableEvents = typeof __propDef.events;
export type PrismicTableSlots = typeof __propDef.slots;
export default class PrismicTable extends SvelteComponent<PrismicTableProps, PrismicTableEvents, PrismicTableSlots> {
}
export {};
